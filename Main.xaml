<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_dateTime_Dia_A_procesar="02/01/2024" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows to limit the number of transactions processed during an execution." Name="in_MaxNumberOfTransactions" Type="InArgument(x:Int32)" />
    <x:Property Name="in_bool_ContinuarWQ" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Dejar formato &quot;MM/dd/yyyy&quot;" Name="in_dateTime_Dia_A_procesar" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>898,846</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="78">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="72">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Auxis.Misc</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.GoogleCloud</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="[P074_Performance_CX]&#xA;[Carga de metricas SSFF]" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="691,781" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">70,22.5</av:Point>
        <x:Double x:Key="StateContainerWidth">656.66666666666663</x:Double>
        <x:Double x:Key="StateContainerHeight">701.99999999999989</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">130,60.1 160,60.1 160,59.4666666666667 223,59.4666666666667</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get the next transaction to be processed." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="251,113" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Retrieve a new transaction data to be processed.&#xA;The TransactionNumber variable holds the current transaction number and incrementing this variable makes the framework retrieve the next transaction. If the framework is retrying a failed transaction, this variable is not incremented until the maximum number of retry attempts is reached." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="1786,1780" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1724,25" sap2010:WorkflowViewState.IdRef="ShouldStop_2" Result="[ShouldStop]" />
          <If Condition="[not in_MaxNumberOfTransactions.Equals(0)]" DisplayName="If - Validar si llegÃ³ al maximo de transacciones" sap:VirtualizedContainerService.HintSize="1724,269" sap2010:WorkflowViewState.IdRef="If_24">
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_60">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[ShouldStop]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[If(TransactionNumber&gt;in_MaxNumberOfTransactions, True, False)]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1724,1253" sap2010:WorkflowViewState.IdRef="If_11">
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="540,391" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log message (Stop process requested)" sap:VirtualizedContainerService.HintSize="478,92" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Stop process requested.&quot;]" />
                <ui:MultipleAssign DisplayName="Multiple Assign End Process (Stop process requested)" sap:VirtualizedContainerService.HintSize="478.4,148" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="sd:DataRow">[drTransactionItem]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="1139,1093" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TransactionData">[TransactionData]</InOutArgument>
                      <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_drTransactionItem">[drTransactionItem]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1104.8,668" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and end process" sap:VirtualizedContainerService.HintSize="1098.4,597.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message  (Get transaction data error)" sap:VirtualizedContainerService.HintSize="1036,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                        <If Condition="[CBOOL(Config(&quot;OrchestratorProject&quot;).ToString)]" DisplayName="If Orchestrator Project is set to true" sap:VirtualizedContainerService.HintSize="1036,352.8" sap2010:WorkflowViewState.IdRef="If_19">
                          <If.Then>
                            <Sequence DisplayName="Orchestrator project" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="End Process (Could not get new transaction)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_44">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Not Orchestrator project" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="End Process (Could not get new transaction) No Orchesrator" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_45">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataRow">[drTransactionItem]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">224.333333333333,212.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">251,113</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">217</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="453,796" sap2010:WorkflowViewState.IdRef="Transition_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">349.833333333333,325.333333333333 349.833333333333,355.333333333333 349.333333333333,355.333333333333 349.333333333333,440.666666666667</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process a single transaction. &#xA;The result of the processing can be: 1) Success, 2) Business Exception, 3) System Exception. &#xA;In the case of a system exception, the transaction can be automatically retried." DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="231,188" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Try to process transaction" sap:VirtualizedContainerService.HintSize="534,2401" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="496,468" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign BusinessException" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - Transaction StartTime" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[TransactionData.Rows(TransactionNumber - 1)("StartTime")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[Now()]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_drTransactionItem">[drTransactionItem]</InOutArgument>
                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_datetime_Dia_A_Procesar">[datetime_Dia_A_Procesar]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="500,221" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Business Rule Exception - Process" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_55">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to BusinessRuleException" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="484,482" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Process Catch" sap:VirtualizedContainerService.HintSize="478,413" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to SystemException" sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,221" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch DisplayName="Try Catch Unable to send exception notificaton - Process" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_HandleException workflow - Process" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Exceptions\Misc_HandleException.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[SystemException]</InArgument>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Notifications">[dt_Notifications]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_NotificationsFile">[Config("NotificationsFile").ToString()]</InArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ExceptionsControl">[dt_ExceptionsControl]</InOutArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_ExceptionFound">[ProcessExceptionFound]</OutArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,181" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailSMTP ERROR workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Emails\SendEmailSMTP.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="Destinatario">[Config.Item("ErrorEmail").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="Body">["Error: " + vbCrLf + Exception.ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="Asunto">["Error intentando notificar en proceso " + Config("logF_BusinessProcessName").ToString]</InArgument>
                                            <InArgument x:TypeArguments="s:String[]" x:Key="Path_adjuntados">[{}]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="GMAILCredential">GEN_PRD_Credential_GMAIL_App_External</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <TryCatch DisplayName="Set the transaction status and move to process the next transaction" sap:VirtualizedContainerService.HintSize="438,978" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                      <TryCatch.Try>
                        <Sequence DisplayName="Process Finally" sap:VirtualizedContainerService.HintSize="376,508" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_FinalizeTransaction workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Misc\Misc_FinalizeTransaction.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TransactionData">[TransactionData]</InOutArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_RetryNumber">[RetryNumber]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_SaveExcel workflow - Process" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Misc\Misc_SaveExcel.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ExcelFilename">[ResultsFile]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">Sheet1</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Data">[TransactionData]</InArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ReportError">False</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,160" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message (Failed to set transaction status)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">234.333333333333,440.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">231,188</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">197</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="451.333333333333,521.333333333333" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">303.633333333333,628.666666666667 303.633333333333,658.666666666667 507,658.666666666667 507,63.8666666666667 477,63.8666666666667</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read configuration file and initialize applications used in the process." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="254,104" sap2010:WorkflowViewState.IdRef="State_2">
                      <State.Entry>
                        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="1390,7816" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="1352,7043" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="1290,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="1290,6203" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="1254,5983" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="Process" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Comment sap:VirtualizedContainerService.HintSize="1192,266" sap2010:WorkflowViewState.IdRef="Comment_3" Text="Crear la unidad compartida del proceso con el formato &#xA;RPA - PXXX - Nombre proceso, copiar la estructura de folders de la siguiente ruta &#xA;G:\Unidades compartidas\RPA 1\Flows UIPath\Estructura Folders&#xA;&#xA;El archivo config debe estar dentro del folder Settings&#xA;&#xA;Crear el asset con el formato P+numero de proceso_ProcessPah indicando la ruta raiz de la unidad compartida del proceso.&#xA;&#xA;" />
                                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="P074_ProcessPath" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="1192,138" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                      <ui:GetRobotAsset.Value>
                                        <OutArgument x:TypeArguments="x:String">[ConfigFolder]</OutArgument>
                                      </ui:GetRobotAsset.Value>
                                    </ui:GetRobotAsset>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1192,303" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Inicia_FileStream workflow" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Inicia_FileStream.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                    </ui:CommentOut>
                                    <If sap2010:Annotation.AnnotationText="Si no se coloca una fecha como parametro de entrada se setea la fecha de la corrida" Condition="[string.IsNullOrEmpty( in_dateTime_Dia_A_procesar)]" sap:VirtualizedContainerService.HintSize="1192,384" sap2010:WorkflowViewState.IdRef="If_23">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign Dia a procesar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_58">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:DateTime">[datetime_Dia_A_Procesar]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:DateTime">[Today.AddMonths(-1)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign Dia a procesar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_59">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:DateTime">[datetime_Dia_A_Procesar]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:DateTime">[convert.ToDateTime(in_dateTime_Dia_A_procesar)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="1192,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[ConfigFolder+"Settings\Config.xlsx"]</InArgument>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <If sap2010:Annotation.AnnotationText="Overwrite queue name from in configuration file in case the argument in_OrchestratorQueueName is specified.&#xA;This provides backward compatibility with &lt; 2018.3." Condition="[Not String.IsNullOrWhiteSpace(in_OrchestratorQueueName)]" DisplayName="If in_OrchestratorQueueName is specified" sap:VirtualizedContainerService.HintSize="1192,328" sap2010:WorkflowViewState.IdRef="If_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign DisplayName="Assign OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_20">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[in_OrchestratorQueueName]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="1192,215" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the process name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (BusinessProcessName)" sap:VirtualizedContainerService.HintSize="1192,142" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                                      <ui:AddLogFields.Fields>
                                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </ui:AddLogFields.Fields>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddLogFields>
                                    <Assign DisplayName="Assign - Process" sap:VirtualizedContainerService.HintSize="1192,82" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Process]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Misc_LoadNotifications workflow" sap:VirtualizedContainerService.HintSize="1192,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Misc/Misc_LoadFiles.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_NotificationsFile">[Config("NotificationsFile").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[Process]</InArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Notifications">[dt_Notifications]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <Sequence DisplayName="Cleanup folders" sap:VirtualizedContainerService.HintSize="1192,438" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="ResultsFolder" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,315" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign - ResultsFolder - Full path" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_36">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[ResultsFolder]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Config("ResultsFile").ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - ResultsFolder - Keep path only" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_37">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[ResultsFolder]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[ResultsFolder.Substring(0, ResultsFolder.LastIndexOf("\"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_46">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[str_ExeptionFolder]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Config("ExScreenshotsFolderPath").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Misc_CleanupFolder workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Misc\Misc_CleanupFolder.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_FolderList">[{ "\Exceptions_Screenshots"}]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_RetentionDays">[Int32.Parse(Config("ResultsRetention").ToString)]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence DisplayName="Prepare ResultsFile" sap:VirtualizedContainerService.HintSize="1192,81" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign - ResultsFile" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Config("ResultsFile").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - ResultsFile - Timestamp" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ResultsFile.Replace("{Timestamp}", Now.ToString("yyyyMMdd_HHmmss"))]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - ResultsFile - Robot" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_32">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ResultsFile.Replace("{Robot}", Environment.MachineName)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - ResultsFile - Session" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ResultsFile.Replace("{Session}", Environment.UserName)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - ResultsFile - Process" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_35">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ResultsFile.Replace("{Process}", Process)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - ResultsFile - Process" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_61">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ConfigFolder+"Outputs\informes Final\"+ ResultsFile]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Sequence DisplayName="Verificar existencia de carpeta de informe finales" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Boolean" Name="bool_ExisteFolderDescargaInforme_aÃ±o" />
                                          <Variable x:TypeArguments="x:Boolean" Name="bool_ExistFolderDescargaInforme_mes" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:PathExists Resource="{x:Null}" DisplayName="Folder Exists 'AÃ±o'" Exists="[bool_ExisteFolderDescargaInforme_aÃ±o]" sap:VirtualizedContainerService.HintSize="827.2,116" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)]" PathType="Folder" />
                                        <If Condition="[bool_ExisteFolderDescargaInforme_aÃ±o]" sap:VirtualizedContainerService.HintSize="827.2,485.6" sap2010:WorkflowViewState.IdRef="If_25">
                                          <If.Then>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;Existe la carpeta &quot; + ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)]" />
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="449.6,325.6" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[&quot; No existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)]" />
                                              <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)]" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <ui:PathExists Resource="{x:Null}" DisplayName="Folder Exists mes'" Exists="[bool_ExistFolderDescargaInforme_mes]" sap:VirtualizedContainerService.HintSize="827.2,116" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)+&quot;\&quot; + Today.ToString(&quot;MM&quot;) +&quot;\&quot;]" PathType="Folder" />
                                        <If Condition="[bool_ExistFolderDescargaInforme_mes]" sap:VirtualizedContainerService.HintSize="827.2,485.6" sap2010:WorkflowViewState.IdRef="If_26">
                                          <If.Then>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Info" Message="[&quot;Existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)+&quot;\&quot; + Today.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="449.6,325.6" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Info" Message="[&quot;no existe la carpeta &quot; +ConfigFolder+ &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)+&quot;\&quot; + Today.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                              <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder mes" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[ConfigFolder + &quot;Outputs\Informes finales\&quot; + Today.ToString(&quot;yyyy&quot;)+&quot;\&quot; + Today.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <Assign DisplayName="Assign folder Path Reportes final" sap:VirtualizedContainerService.HintSize="827.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_62">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ResultsFile]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[ConfigFolder + "Outputs\Informes finales\" + Today.ToString("yyyy")+"\" + Today.ToString("MM") +"\" + ResultsFile]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </Sequence>
                                    <Sequence DisplayName="Verificar existencia de carpeta del aÃ±o y mes Reporte a cargar a SSFF" sap:VirtualizedContainerService.HintSize="1192,2227" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Boolean" Name="bool_ExisteFolderInformeFinales_aÃ±o" />
                                        <Variable x:TypeArguments="x:Boolean" Name="bool_ExistFolderInformeFinales_mes" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:PathExists Resource="{x:Null}" DisplayName="Folder Exists 'AÃ±o'" Exists="[bool_ExisteFolderInformeFinales_aÃ±o]" sap:VirtualizedContainerService.HintSize="1130,115" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)]" PathType="Folder" />
                                      <If Condition="[bool_ExisteFolderInformeFinales_aÃ±o]" sap:VirtualizedContainerService.HintSize="1130,483" sap2010:WorkflowViewState.IdRef="If_27">
                                        <If.Then>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Info" Message="[&quot;Existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)]" />
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,323" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Info" Message="[&quot; No existe la carpeta &quot; + ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)]" />
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:PathExists Resource="{x:Null}" DisplayName="Folder Exists mes'" Exists="[bool_ExistFolderInformeFinales_mes]" sap:VirtualizedContainerService.HintSize="1130,115" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot;]" PathType="Folder" />
                                      <If Condition="[bool_ExistFolderInformeFinales_mes]" sap:VirtualizedContainerService.HintSize="1130,483" sap2010:WorkflowViewState.IdRef="If_28">
                                        <If.Then>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[&quot;Existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)+&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,323" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[&quot;no existe la carpeta &quot; + ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder mes" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)+&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot;]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:PathExists Resource="{x:Null}" DisplayName="Folder Exists dia'" Exists="[bool_ExistFolderInformeFinales_mes]" sap:VirtualizedContainerService.HintSize="1130,115" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)+&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;dd-MM&quot;) +&quot;\&quot;]" PathType="Folder" />
                                      <If Condition="[bool_ExistFolderInformeFinales_mes]" sap:VirtualizedContainerService.HintSize="1130,483" sap2010:WorkflowViewState.IdRef="If_29">
                                        <If.Then>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[&quot;Existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;dd-MM&quot;) +&quot;\&quot;]" />
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,323" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;no existe la carpeta &quot; +ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;)+&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;dd-MM&quot;) +&quot;\&quot;]" />
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder mes" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[ConfigFolder + &quot;Outputs\Reporte a Cargar\&quot; + datetime_Dia_a_Procesar.ToString(&quot;yyyy&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;MM&quot;) +&quot;\&quot; + datetime_Dia_a_Procesar.ToString(&quot;dd-MM&quot;) +&quot;\&quot;]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign DisplayName="Assign full path BI" sap:VirtualizedContainerService.HintSize="1130,82" sap2010:WorkflowViewState.IdRef="Assign_63">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[Config("Path_Descarga_Reprotes")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[ConfigFolder + "Outputs\Reporte a Cargar\" + datetime_Dia_a_Procesar.ToString("yyyy") +"\" + datetime_Dia_a_Procesar.ToString("MM") +"\" + datetime_Dia_a_Procesar.ToString("dd-MM") +"\"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <If sap2010:Annotation.AnnotationText="IF  para controlar si se quiere continuar con los datos cargados en cola o ejecutar la carga de datos.&#xA;&#xA;solo aplica para cuando los proceso Dispatcher y performer este unidos de lo contrario setear el variable de entrar en true" Condition="[in_bool_ContinuarWQ]" sap:VirtualizedContainerService.HintSize="1192,522" sap2010:WorkflowViewState.IdRef="If_22">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Manual load Transaction Data" sap:VirtualizedContainerService.HintSize="450,305" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Comment DisplayName="Manual load Transaction Data - Instructions" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// if this is a None Ochestrator Project, please add the upload of the transaction data in this section. " />
                                          <ui:BuildDataTable DataTable="[TransactionData]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;PathReporte&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;ID&gt;DescargaCX&lt;/ID&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllApplications workflow" sap:VirtualizedContainerService.HintSize="1290,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[Not TransactionData.Columns.Contains(&quot;ErrorMessage&quot;)]" DisplayName="If TransactionData has been initialized" sap:VirtualizedContainerService.HintSize="1290,414" sap2010:WorkflowViewState.IdRef="If_12">
                                <If.Then>
                                  <Sequence DisplayName="TransactionData has been initialized" sap:VirtualizedContainerService.HintSize="450,225" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_InitializeTransactionData workflow" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Misc\Misc_InitializeTransactionData.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TransactionData">[TransactionData]</InOutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1199.2,461.6" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Init Catch" sap:VirtualizedContainerService.HintSize="496,391.2" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="433.6,125.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_HandleException workflow - Init" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Exceptions\Misc_HandleException.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[SystemException]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Notifications">[dt_Notifications]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_NotificationsFile">[Config("NotificationsFile").ToString()]</InArgument>
                                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ExceptionsControl">[dt_ExceptionsControl]</InOutArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_ExceptionFound">[InitExceptionFound]</OutArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">223,6.66666666666666</av:Point>
                          <av:Size x:Key="ShapeSize">254,104</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">220</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Successful" sap:VirtualizedContainerService.HintSize="448.8,802.4" sap2010:WorkflowViewState.IdRef="Transition_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              <av:PointCollection x:Key="ConnectorLocation">350,110.666666666667 350,140.666666666667 349.833333333333,140.666666666667 349.833333333333,212.333333333333</av:PointCollection>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:Comment DisplayName="Comment (default transition)" sap:VirtualizedContainerService.HintSize="334,74.6666666666667" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="System Exception (failed initialization)" sap:VirtualizedContainerService.HintSize="451.333333333333,822.666666666667" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">350,110.666666666667 350,140.666666666667 82.8,140.666666666667 82.8,208</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="End process and close all applications used." DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,120" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                              <State.Entry>
                                <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="1404,2971.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="End Process Try" sap:VirtualizedContainerService.HintSize="1367.2,2406.4" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence sap2010:Annotation.AnnotationText="AquÃ­ debemos enviar los reportes de la ejecuciÃ³n, se recomienda utilizar el transactiondata para este motivo. Un par de pointers:&#xA;&#xA;- Usar un template de reporte de ser posible con cabeceras ya formateadas para dar mejor visibilidad&#xA;- Remover/reordenar/Renombrar columnas para mejorar o diferenciar reportes a usuarios de reportes a soporte&#xA;- Tienen disponibles flotando en el main la tabla dt_ExceptionsControl para adjuntar en un posible mail a soporte." DisplayName="Resultados" sap:VirtualizedContainerService.HintSize="1304.8,2142.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="EndProcessResultsFile" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="1242.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Kill_ForcedProcesses workflow" sap:VirtualizedContainerService.HintSize="1242.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Kill_ForcedProcesses.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="ProcessName">saplogon</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <If Condition="[InitExceptionFound]" DisplayName="If existe un errore" sap:VirtualizedContainerService.HintSize="1242.4,1631.2" sap2010:WorkflowViewState.IdRef="If_21">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="1098.4,1471.2" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="s:String[]" Name="Arr_Adjuntos" />
                                                <Variable x:TypeArguments="x:String" Name="strBody" />
                                                <Variable x:TypeArguments="x:String" Name="strHeader" />
                                                <Variable x:TypeArguments="x:String" Name="strDestinatarios" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[TransactionData IsNot Nothing AndAlso TransactionData.Rows.Count &gt; 0]" DisplayName="If some transactions were processed" sap:VirtualizedContainerService.HintSize="1036,1139.2" sap2010:WorkflowViewState.IdRef="If_20">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence DisplayName="Transactions were processed" sap:VirtualizedContainerService.HintSize="496,979.2" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="sd:DataTable" Name="dt_DatosResultado" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;Enviando reporte de corrida&quot;]" />
                                                    <Assign DisplayName="Assign Body" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strBody]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["El proceso de Performance CX ha finalizado correctamente."+ vbCr + vbCr +
"--------------------------------------------------------------------------" + vbCr + vbCr +
"Path del proceso: " + ConfigFolder + vbCr + vbCr +
"Dia y Hora: "  + Now.ToString("dd/MM/yyyy") + " " + Now.ToLongTimeString()+ vbCr + vbCr +
"Muchas gracias."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign Header" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strHeader]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign Para" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strDestinatarios]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Config("Destinatarios").ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign adjuntos" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:String[]">[Arr_Adjuntos]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:String[]">[{ResultsFile}]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Error" Message="[strBody]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:LogMessage>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailSMTP workflow" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Emails\SendEmailSMTP.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Destinatario">[strDestinatarios]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Body">[strBody]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Asunto">[strHeader]</InArgument>
                                                        <InArgument x:TypeArguments="s:String[]" x:Key="Path_adjuntados">[Arr_Adjuntos]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="GMAILCredential">GEN_PRD_Credential_GMAIL_App_External</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="No transactions were processed" sap:VirtualizedContainerService.HintSize="496,979.2" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[&quot;Sin transacciones procesadas, enviando email&quot;]" />
                                                    <Assign DisplayName="Assign Body" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strBody]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["El proceso de Performance CX ha finalizado correctamente."+ vbCr + vbCr +
"Sin transacciones para procesar"+ vbCr +
"--------------------------------------------------------------------------" + vbCr + vbCr +
"Dia y Hora: "  + Now.ToString("dd/MM/yyyy") + " " + Now.ToLongTimeString()+ vbCr + vbCr +
"Muchas gracias."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign Header" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strHeader]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign Para" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strDestinatarios]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Config("Destinatarios").ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign adjuntos" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:String[]">[Arr_Adjuntos]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:String[]">[{ResultsFile}]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Error" Message="[strBody]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:LogMessage>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailSMTP workflow" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Emails\SendEmailSMTP.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Destinatario">[strDestinatarios]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Body">[strBody]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Asunto">[strHeader]</InArgument>
                                                        <InArgument x:TypeArguments="s:String[]" x:Key="Path_adjuntados" />
                                                        <InArgument x:TypeArguments="x:String" x:Key="GMAILCredential">GEN_PRD_Credential_GMAIL_App_External</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1036,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                                                <ui:MultipleAssign.AssignOperations>
                                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[EndProcessExceptionFound]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[InitExceptionFound]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[ProcessExceptionFound]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                  </scg:List>
                                                </ui:MultipleAssign.AssignOperations>
                                              </ui:MultipleAssign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="1026,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="885,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="480,714" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="438,91" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Warn" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                          <TryCatch DisplayName="Try Catch Unable to send exception notificaton - End process" sap:VirtualizedContainerService.HintSize="438,339" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                            <TryCatch.Try>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Misc_HandleException workflow - End Process" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Exceptions\Misc_HandleException.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[Exception]</InArgument>
                                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Notifications">[dt_Notifications]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_NotificationsFile">[Config("NotificationsFile").ToString()]</InArgument>
                                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ExceptionsControl">[dt_ExceptionsControl]</InOutArgument>
                                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_ExceptionFound">[EndProcessExceptionFound]</OutArgument>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailSMTP ERROR workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Emails\SendEmailSMTP.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="Destinatario">[Config.Item("ErrorEmail").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="Body">["Error: " + vbCrLf + Exception.ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="Asunto">["Error intentando notificar en end process " + Config("logF_BusinessProcessName").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="s:String[]" x:Key="Path_adjuntados">[{}]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="GMAILCredential">GEN_PRD_Credential_GMAIL_App_External</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow (End process)" sap:VirtualizedContainerService.HintSize="438,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                  <TryCatch.Finally>
                                    <If Condition="[InitExceptionFound OR ProcessExceptionFound OR EndProcessExceptionFound]" DisplayName="If a SystemException was detected" sap:VirtualizedContainerService.HintSize="484,291" sap2010:WorkflowViewState.IdRef="If_13">
                                      <If.Then>
                                        <Sequence DisplayName="SystemException was detected" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Throw DisplayName="Throw - Process failed" Exception="[New SystemException(&#xA;&quot;An error occurred while executing the process.&quot; + Environment.NewLine +&#xA;&quot;- Init error: &quot; + InitExceptionFound.ToString + Environment.NewLine +&#xA;&quot;- Process error: &quot; + ProcessExceptionFound.ToString + Environment.NewLine +&#xA;&quot;- End Process error: &quot; + EndProcessExceptionFound.ToString&#xA;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </TryCatch.Finally>
                                </TryCatch>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">18,208</av:Point>
                                  <av:Size x:Key="ShapeSize">144,120</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Log Message (initialization failure)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Fatal" Message="[&quot;System exception at initialization: &quot; + SystemException.Message + &quot; at Source: &quot; + SystemException.Source]" />
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="Business Rule Exception" DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="450,536" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">361.383333333333,628.666666666667 361.383333333333,658.666666666667 505.333333333333,658.666666666667 505.333333333333,246.233333333333 475.333333333333,246.233333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[BusinessException IsNot Nothing]</Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="There is no need for any action in case of successful transaction.&#xA;The process should simply go to next transaction." DisplayName="Success" sap:VirtualizedContainerService.HintSize="452,553.6" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">407.583333333333,628.666666666667 407.583333333333,651.433333333333 505.333333333333,651.433333333333 505.333333333333,291.433333333333 475.333333333333,291.433333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[SystemException Is Nothing And BusinessException is Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (New transaction retrieved)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem IsNot Nothing or drTransactionItem isnot Nothing]</Transition.Condition>
        </Transition>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="453,853" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">349.833333333333,325.333333333333 349.833333333333,355.333333333333 90,355.333333333333 90,328</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (No more transations available)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem Is Nothing And drTransactionItem is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Used in case transactions are stored in a DataTable, for example, after being retrieved from a spreadsheet." Default="[New Datatable()]" Name="TransactionData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Notifications" />
      <Variable x:TypeArguments="x:String" Name="ResultsFile" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="InitExceptionFound" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="ProcessExceptionFound" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="EndProcessExceptionFound" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ExceptionsControl" />
      <Variable x:TypeArguments="sd:DataRow" Name="drTransactionItem" />
      <Variable x:TypeArguments="x:String" Name="str_ExeptionFolder" />
      <Variable x:TypeArguments="s:DateTime" Name="datetime_Dia_A_Procesar" />
      <Variable x:TypeArguments="x:String" Name="ConfigFolder" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>